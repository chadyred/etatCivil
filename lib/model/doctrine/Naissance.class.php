<?php

/**
 * Naissance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    etatCivil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Naissance extends BaseNaissance
{
    //Cette méthode retourne le nombre d'acteur par mariage
    public function getEnfant()
    {
        $res = Doctrine::getTable('Naissance_enfant')
            ->createQuery('enf')
            ->where('enf.naissance_id = ?', $this->getId())
            ->execute();


        return $res->getFirst();
    }

    //Cette méthode retourne le nombre d'acteur par mariage
    public function compteLesContacts()
    {
        $res = Doctrine_Query::create()
            -> from('Naissance_acteur act')
            ->where('act.naissance_id = ?', $this->getId());

        // On appel ici la méthode compteLesActeurs de la TABLE !
        return Doctrine_Core::getTable('Naissance')->compteLesContacts($res);
    }

    public function getNbDeclarant()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.estdeclarant = ?', true)
                ->execute();

        return $res->count();
    }

    public function declarantIsPresent()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.estdeclarant = ?', true)
                ->execute();

        if ($res->count()==0)  // Si la somme des déclarant est null
                return false;   // on retourne 0
        else if ($res->count()>2)// Sinon s'il y a plus de 2 déclarants
             {
                    return -1;    // On retourne -1
             } else {              // Sinon s'il y a 1 ou 2 déclarants
                        return true;// On retourne 1
                    }
    }

    public function PereIsPresent()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.TypeActeur = ?', "père")
                ->execute();

        if ($res->count()==0)  // Si le pere n'est pas enregistré
                return false;   // on retourne 0
             else {              // Sinon => il est enregistré
                        return true;// On retourne 1
                    }
    }

    public function MereIsPresent()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.TypeActeur = ?', "mère")
                ->execute();

        if ($res->count()==0)  // Si le pere n'est pas enregistré
                return false;   // on retourne 0
             else {              // Sinon => il est enregistré
                        return true;// On retourne 1
                    }
    }

    public function getDeclarants()
    {
        $Declarants = Doctrine_Query::create()
            ->from('Naissance_acteur act')
                ->where("act.naissance_id = ?", $this->getId() )
                ->andWhere('act.estdeclarant = ?', 1)
                ->execute();

        return $Declarants;
    }

    public function getPere()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.TypeActeur = ?', "père")
                ->execute();

        return $res->getFirst();
    }

    public function getMere()
    {
        $res = Doctrine::getTable('Naissance_acteur')
            ->createQuery("act")
            ->where('act.naissance_id = ?', $this->getId())
            ->andWhere('act.TypeActeur = ?', "mère")
                ->execute();

        return $res->getFirst();
    }


     /**
     * Cette fonction récupère l'année de l'acte passé en paramètre
     *
     * @author    FLAMENT Guillaume
     * @param     int $id
     */
    public static function getAnneeActe($id){

        $res = Doctrine_Query::create()       //récupère un array avec les résultats de type naissance (ici l'array ne comporte qu'une naissance)
            ->select('dateacte')            //car on met l'id dans le where
            ->from('Naissance n')
            ->where('n.id = ?', $id)
            ->execute();


        $date = $res->get(0);

        return date('Y',strtotime(($date->get('dateActe'))));   // renvoie l'année de la date convertie en int pour appeler la fonction date()
    }
}
