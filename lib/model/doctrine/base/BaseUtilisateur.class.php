<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Utilisateur', 'doctrine');

/**
 * BaseUtilisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $login
 * @property string $password
 * @property string $droits
 * @property string $nom
 * @property string $prenom
 * @property string $fonction
 * 
 * @method integer     getId()       Returns the current record's "id" value
 * @method string      getLogin()    Returns the current record's "login" value
 * @method string      getPassword() Returns the current record's "password" value
 * @method string      getDroits()   Returns the current record's "droits" value
 * @method string      getNom()      Returns the current record's "nom" value
 * @method string      getPrenom()   Returns the current record's "prenom" value
 * @method string      getFonction() Returns the current record's "fonction" value
 * @method Utilisateur setId()       Sets the current record's "id" value
 * @method Utilisateur setLogin()    Sets the current record's "login" value
 * @method Utilisateur setPassword() Sets the current record's "password" value
 * @method Utilisateur setDroits()   Sets the current record's "droits" value
 * @method Utilisateur setNom()      Sets the current record's "nom" value
 * @method Utilisateur setPrenom()   Sets the current record's "prenom" value
 * @method Utilisateur setFonction() Sets the current record's "fonction" value
 * 
 * @package    etatcivil
 * @subpackage model
 * @author     Boyer Jimmy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtilisateur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utilisateur');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('login', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('password', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('droits', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'user',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('nom', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('prenom', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('fonction', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}