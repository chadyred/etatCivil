<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Mariage', 'doctrine');

/**
 * BaseMariage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $numeroacte
 * @property integer $numeroordre
 * @property date $datemariage
 * @property date $datereceptioncontrat
 * @property string $nomprenomnotaire
 * @property string $officieretatcivil
 * @property date $dateacte
 * @property time $heureacte
 * @property Doctrine_Collection $ImageRegistreMariage
 * @property Doctrine_Collection $MariageActeur
 * @property Doctrine_Collection $MariageContact
 * @property Doctrine_Collection $MentionMarginaleMariage
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getNumeroacte()              Returns the current record's "numeroacte" value
 * @method integer             getNumeroordre()             Returns the current record's "numeroordre" value
 * @method date                getDatemariage()             Returns the current record's "datemariage" value
 * @method date                getDatereceptioncontrat()    Returns the current record's "datereceptioncontrat" value
 * @method string              getNomprenomnotaire()        Returns the current record's "nomprenomnotaire" value
 * @method string              getOfficieretatcivil()       Returns the current record's "officieretatcivil" value
 * @method date                getDateacte()                Returns the current record's "dateacte" value
 * @method time                getHeureacte()               Returns the current record's "heureacte" value
 * @method Doctrine_Collection getImageRegistreMariage()    Returns the current record's "ImageRegistreMariage" collection
 * @method Doctrine_Collection getMariageActeur()           Returns the current record's "MariageActeur" collection
 * @method Doctrine_Collection getMariageContact()          Returns the current record's "MariageContact" collection
 * @method Doctrine_Collection getMentionMarginaleMariage() Returns the current record's "MentionMarginaleMariage" collection
 * @method Mariage             setId()                      Sets the current record's "id" value
 * @method Mariage             setNumeroacte()              Sets the current record's "numeroacte" value
 * @method Mariage             setNumeroordre()             Sets the current record's "numeroordre" value
 * @method Mariage             setDatemariage()             Sets the current record's "datemariage" value
 * @method Mariage             setDatereceptioncontrat()    Sets the current record's "datereceptioncontrat" value
 * @method Mariage             setNomprenomnotaire()        Sets the current record's "nomprenomnotaire" value
 * @method Mariage             setOfficieretatcivil()       Sets the current record's "officieretatcivil" value
 * @method Mariage             setDateacte()                Sets the current record's "dateacte" value
 * @method Mariage             setHeureacte()               Sets the current record's "heureacte" value
 * @method Mariage             setImageRegistreMariage()    Sets the current record's "ImageRegistreMariage" collection
 * @method Mariage             setMariageActeur()           Sets the current record's "MariageActeur" collection
 * @method Mariage             setMariageContact()          Sets the current record's "MariageContact" collection
 * @method Mariage             setMentionMarginaleMariage() Sets the current record's "MentionMarginaleMariage" collection
 * 
 * @package    etatcivil
 * @subpackage model
 * @author     Boyer Jimmy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMariage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mariage');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('numeroacte', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('numeroordre', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('datemariage', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('datereceptioncontrat', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nomprenomnotaire', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('officieretatcivil', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('dateacte', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('heureacte', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ImageRegistreMariage', array(
             'local' => 'id',
             'foreign' => 'mariage_id'));

        $this->hasMany('MariageActeur', array(
             'local' => 'id',
             'foreign' => 'mariage_id'));

        $this->hasMany('MariageContact', array(
             'local' => 'id',
             'foreign' => 'mariage_id'));

        $this->hasMany('MentionMarginaleMariage', array(
             'local' => 'id',
             'foreign' => 'mariage_id'));
    }
}