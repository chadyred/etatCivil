<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('NaissanceEnfant', 'doctrine');

/**
 * BaseNaissanceEnfant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $naissance_id
 * @property string $nom
 * @property string $prenom
 * @property string $sexe
 * @property date $datenaissance
 * @property time $heurenaissance
 * @property string $lieunaissance
 * @property string $nouveaunom
 * @property string $domicile
 * @property integer $parentsmaries
 * @property date $datemariageparents
 * @property string $lieumariageparents
 * @property Naissance $Naissance
 * 
 * @method integer         getId()                 Returns the current record's "id" value
 * @method integer         getNaissanceId()        Returns the current record's "naissance_id" value
 * @method string          getNom()                Returns the current record's "nom" value
 * @method string          getPrenom()             Returns the current record's "prenom" value
 * @method string          getSexe()               Returns the current record's "sexe" value
 * @method date            getDatenaissance()      Returns the current record's "datenaissance" value
 * @method time            getHeurenaissance()     Returns the current record's "heurenaissance" value
 * @method string          getLieunaissance()      Returns the current record's "lieunaissance" value
 * @method string          getNouveaunom()         Returns the current record's "nouveaunom" value
 * @method string          getDomicile()           Returns the current record's "domicile" value
 * @method integer         getParentsmaries()      Returns the current record's "parentsmaries" value
 * @method date            getDatemariageparents() Returns the current record's "datemariageparents" value
 * @method string          getLieumariageparents() Returns the current record's "lieumariageparents" value
 * @method Naissance       getNaissance()          Returns the current record's "Naissance" value
 * @method NaissanceEnfant setId()                 Sets the current record's "id" value
 * @method NaissanceEnfant setNaissanceId()        Sets the current record's "naissance_id" value
 * @method NaissanceEnfant setNom()                Sets the current record's "nom" value
 * @method NaissanceEnfant setPrenom()             Sets the current record's "prenom" value
 * @method NaissanceEnfant setSexe()               Sets the current record's "sexe" value
 * @method NaissanceEnfant setDatenaissance()      Sets the current record's "datenaissance" value
 * @method NaissanceEnfant setHeurenaissance()     Sets the current record's "heurenaissance" value
 * @method NaissanceEnfant setLieunaissance()      Sets the current record's "lieunaissance" value
 * @method NaissanceEnfant setNouveaunom()         Sets the current record's "nouveaunom" value
 * @method NaissanceEnfant setDomicile()           Sets the current record's "domicile" value
 * @method NaissanceEnfant setParentsmaries()      Sets the current record's "parentsmaries" value
 * @method NaissanceEnfant setDatemariageparents() Sets the current record's "datemariageparents" value
 * @method NaissanceEnfant setLieumariageparents() Sets the current record's "lieumariageparents" value
 * @method NaissanceEnfant setNaissance()          Sets the current record's "Naissance" value
 * 
 * @package    etatcivil
 * @subpackage model
 * @author     Boyer Jimmy
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNaissanceEnfant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('naissance_enfant');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('naissance_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nom', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('prenom', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('sexe', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'masculin',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('datenaissance', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('heurenaissance', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('lieunaissance', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('nouveaunom', 'string', 150, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 150,
             ));
        $this->hasColumn('domicile', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('parentsmaries', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('datemariageparents', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('lieumariageparents', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Naissance', array(
             'local' => 'naissance_id',
             'foreign' => 'id'));
    }
}