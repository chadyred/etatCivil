<?php

/**
 * BaseNaissance_acteur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $naissance_id
 * @property string $nom
 * @property string $prenom
 * @property integer $age
 * @property date $dateNaissance
 * @property string $lieuNaissance
 * @property string $profession
 * @property string $domicile
 * @property boolean $estDeclarant
 * @property enum $typeActeur
 * @property string $typeAutres
 * @property Naissance $Naissance
 * 
 * @method integer          getNaissanceId()   Returns the current record's "naissance_id" value
 * @method string           getNom()           Returns the current record's "nom" value
 * @method string           getPrenom()        Returns the current record's "prenom" value
 * @method integer          getAge()           Returns the current record's "age" value
 * @method date             getDateNaissance() Returns the current record's "dateNaissance" value
 * @method string           getLieuNaissance() Returns the current record's "lieuNaissance" value
 * @method string           getProfession()    Returns the current record's "profession" value
 * @method string           getDomicile()      Returns the current record's "domicile" value
 * @method boolean          getEstDeclarant()  Returns the current record's "estDeclarant" value
 * @method enum             getTypeActeur()    Returns the current record's "typeActeur" value
 * @method string           getTypeAutres()    Returns the current record's "typeAutres" value
 * @method Naissance        getNaissance()     Returns the current record's "Naissance" value
 * @method Naissance_acteur setNaissanceId()   Sets the current record's "naissance_id" value
 * @method Naissance_acteur setNom()           Sets the current record's "nom" value
 * @method Naissance_acteur setPrenom()        Sets the current record's "prenom" value
 * @method Naissance_acteur setAge()           Sets the current record's "age" value
 * @method Naissance_acteur setDateNaissance() Sets the current record's "dateNaissance" value
 * @method Naissance_acteur setLieuNaissance() Sets the current record's "lieuNaissance" value
 * @method Naissance_acteur setProfession()    Sets the current record's "profession" value
 * @method Naissance_acteur setDomicile()      Sets the current record's "domicile" value
 * @method Naissance_acteur setEstDeclarant()  Sets the current record's "estDeclarant" value
 * @method Naissance_acteur setTypeActeur()    Sets the current record's "typeActeur" value
 * @method Naissance_acteur setTypeAutres()    Sets the current record's "typeAutres" value
 * @method Naissance_acteur setNaissance()     Sets the current record's "Naissance" value
 * 
 * @package    etatCivil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseNaissance_acteur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('naissance_acteur');
        $this->hasColumn('naissance_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('nom', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 45,
             ));
        $this->hasColumn('prenom', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 45,
             ));
        $this->hasColumn('age', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('dateNaissance', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('lieuNaissance', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 4000,
             ));
        $this->hasColumn('profession', 'string', 70, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 70,
             ));
        $this->hasColumn('domicile', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'charset' => 'utf8',
             'length' => 4000,
             ));
        $this->hasColumn('estDeclarant', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('typeActeur', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pÃ¨re',
              1 => 'mÃ¨re',
              2 => 'autre prÃ©ciser...',
             ),
             'default' => 'pÃ¨re',
             'notnull' => true,
             'charset' => 'utf8',
             ));
        $this->hasColumn('typeAutres', 'string', 70, array(
             'type' => 'string',
             'charset' => 'utf8',
             'length' => 70,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Naissance', array(
             'local' => 'naissance_id',
             'foreign' => 'id'));
    }
}